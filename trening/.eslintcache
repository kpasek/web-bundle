[{"/home/kpasek/Programowanie/WEB/bundle/trening/src/index.js":"1","/home/kpasek/Programowanie/WEB/bundle/trening/src/App.js":"2","/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/Training.jsx":"3","/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/TrainingDetails.jsx":"4","/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/TrainingInfo.jsx":"5","/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Exercises/ExerciseDetail.jsx":"6","/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/Trainings.jsx":"7"},{"size":206,"mtime":1607616354000,"results":"8","hashOfConfig":"9"},{"size":127,"mtime":1607617033000,"results":"10","hashOfConfig":"9"},{"size":8703,"mtime":1607691275637,"results":"11","hashOfConfig":"9"},{"size":6799,"mtime":1607629432000,"results":"12","hashOfConfig":"9"},{"size":1281,"mtime":1607629384000,"results":"13","hashOfConfig":"9"},{"size":31134,"mtime":1607692037250,"results":"14","hashOfConfig":"9"},{"size":5934,"mtime":1607629352000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6y5vi",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/kpasek/Programowanie/WEB/bundle/trening/src/index.js",[],["32","33"],"/home/kpasek/Programowanie/WEB/bundle/trening/src/App.js",[],"/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/Training.jsx",["34"],"﻿import React, { Component } from \"react\";\nimport \"../../css/fontello.css\";\nimport \"../../css/fontello-codes.css\";\nimport \"../../css/fontello-embedded.css\";\nimport \"../../css/fontello-ie7-codes.css\";\nimport \"../../css/bootstrap.css\";\nimport TrainingDetails from \"./TrainingDetails\";\nimport TrainingInfo from \"./TrainingInfo\";\n\nexport class Training extends Component {\n  static displayName = Training.name;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainingId: this.props.trainingId,\n      name: \"\",\n      exerciseNumber: 2,\n      public: false,\n      loading: true,\n      editValidateMessage: \"\",\n      info: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchTrainingData();\n  }\n\n  handleCloseMessege = () => {\n    this.setState({\n      trainingId: this.state.trainingId,\n      name: this.state.name,\n      exerciseNumber: this.state.exerciseNumber,\n      public: this.state.public,\n      loading: false,\n      editValidateMessage: this.state.editValidateMessage,\n      info: \"\",\n    });\n  };\n  handleEdit = async () => {\n    const newNameInput = document.getElementById(\n      \"training-\" + this.state.trainingId + \"name\"\n    );\n    const newExerciseNumberInput = document.getElementById(\n      \"training-\" + this.state.trainingId + \"exercises\"\n    );\n    if (newNameInput === \"\" || newExerciseNumberInput <= 0) {\n      this.setState({\n        trainingId: this.state.trainingId,\n        name: this.state.name,\n        exerciseNumber: this.state.exerciseNumber,\n        public: this.state.public,\n        loading: false,\n        editValidateMessage: \"Błędnie wprowadzone dane w formularzu\",\n        info: \"\",\n      });\n    }\n\n    const response = await fetch(\n      \"https://api.kamilpasek.pl/api/trainings/\" + this.state.trainingId,\n      {\n        method: \"PUT\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          trainingId: this.state.trainingId,\n          name: newNameInput.value,\n          exerciseNumber: parseInt(newExerciseNumberInput.value),\n          public: this.state.public,\n        }),\n      }\n    );\n    if (response.ok) {\n      this.setState({\n        trainingId: this.state.trainingId,\n        name: newNameInput.value,\n        exerciseNumber: newExerciseNumberInput.value,\n        public: this.state.public,\n        loading: false,\n        editValidateMessage: \"\",\n        info: \"Zmiany zostały zapisane\",\n      });\n    }\n  };\n  renderInfo = () => {\n    if (this.state.info !== \"\") {\n      return (\n        <div className=\"alert alert-success\" role=\"alert\">\n          <div className=\"float-left\">{this.state.info}</div>\n          <div className=\"float-right\">\n            <i className=\"icon-cancel\" onClick={this.handleCloseMessege}></i>\n          </div>\n          <div style={{ clear: \"both\" }}></div>\n        </div>\n      );\n    }\n    return null;\n  };\n  renderValidateMessage = () => {\n    if (this.state.editValidateMessage !== \"\") {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {this.state.editValidateMessage}\n        </div>\n      );\n    }\n    return null;\n  };\n  async fetchTrainingData() {\n    const response = await fetch(\n      \"https://api.kamilpasek.pl/api/trainings/\" + this.state.trainingId,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    this.setState({\n      trainingId: this.state.trainingId,\n      name: data.name,\n      exerciseNumber: data.exerciseNumber,\n      public: data.public,\n      loading: false,\n      editValidateMessage: \"\",\n      info: \"\",\n    });\n  }\n  renderBody() {\n    if (this.state.loading) return <p>Trwa ładowanie...</p>;\n    return (\n      <React.Fragment>\n        {this.renderInfo()}\n        <div className=\"py-1 font-size-large letter-spacing-1\">\n          {/* training name */}\n          <div className=\"float-left\">\n            <a\n              className=\"link-black\"\n              data-toggle=\"collapse\"\n              href={\"#training-detail-\" + this.state.trainingId}\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseExample\"\n            >\n              <span className=\"\">{this.state.name}</span>\n              <i className=\"icon-down-dir\"></i>\n            </a>\n          </div>\n          {/* delete training button */}\n          <div className=\"float-right\">\n            <a\n              href={\"#training-delete-\" + this.state.trainingId}\n              className=\"link-black\"\n              data-toggle=\"collapse\"\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseDelete\"\n            >\n              <i className=\"icon-trash-empty color-red\"></i>\n            </a>\n          </div>\n          {/* edit button */}\n          <div className=\"float-right\">\n            <a\n              href={\"#training-edit-\" + this.state.trainingId}\n              className=\"link-black\"\n              data-toggle=\"collapse\"\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseEdit\"\n            >\n              <i className=\"icon-edit\"></i>\n            </a>\n          </div>\n          {/* info button */}\n          <div className=\"float-right\">\n            <a\n              href={\"#training-\" + this.state.trainingId}\n              className=\"link-black\"\n              data-toggle=\"collapse\"\n              role=\"button\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseInfo\"\n            >\n              <i className=\"icon-info-circled-alt\"></i>\n            </a>\n          </div>\n\n          <div style={{ clear: \"both\" }}></div>\n        </div>\n        {/* collapsed trainig detail */}\n        <div\n          className=\"collapse\"\n          id={\"training-detail-\" + this.state.trainingId}\n        >\n          <div className=\"\">\n            <TrainingDetails\n              key={\"detail-component-\" + this.state.trainingId}\n              trainingId={this.state.trainingId}\n              types={this.props.types}\n              parts={this.props.parts}\n            />\n          </div>\n        </div>\n        {/* collapsed trainig delete */}\n        <div\n          className=\"collapse\"\n          id={\"training-delete-\" + this.state.trainingId}\n        >\n          <div className=\"\">\n            <p className=\"mt-2 px-2\">\n              Usunięcie treningu powoduje wykasowanie wszystkich zależności\n              pomiędzy ćwiczeniami a danym treningiem. Operacja jest\n              nieodwracalna\n            </p>\n            <button\n              className=\"btn btn-outline-danger mt-3\"\n              onClick={() => {\n                this.props.onDeleteTraining(this.state.trainingId);\n              }}\n            >\n              Usuń trening\n            </button>\n          </div>\n        </div>\n        {/* collapsed edit fields */}\n        <div className=\"collapse\" id={\"training-edit-\" + this.state.trainingId}>\n          <div>\n            <label\n              className=\"mt-1\"\n              htmlFor={\"training-\" + this.state.trainingId + \"name\"}\n            >\n              Nazwa\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              id={\"training-\" + this.state.trainingId + \"name\"}\n              defaultValue={this.state.name}\n            ></input>\n            <label\n              className=\"mt-1\"\n              htmlFor={\"training-\" + this.state.trainingId + \"exercises\"}\n            >\n              Ilość ćwiczeń\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"number\"\n              id={\"training-\" + this.state.trainingId + \"exercises\"}\n              defaultValue={this.state.exerciseNumber}\n              min=\"1\"\n              max=\"10\"\n            ></input>\n            {this.renderValidateMessage()}\n            <button\n              className=\"btn btn-outline-primary mt-2\"\n              onClick={this.handleEdit}\n            >\n              Zatwierdź\n            </button>\n          </div>\n        </div>\n        {/* collapsed trainig info */}\n        <div className=\"collapse\" id={\"training-\" + this.state.trainingId}>\n          <div className=\"\">\n            <TrainingInfo\n              key={\"info-component-\" + this.state.trainingId}\n              trainingId={this.state.trainingId}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n  render() {\n    return this.renderBody();\n  }\n}\n","/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/TrainingDetails.jsx",[],"/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/TrainingInfo.jsx",[],"/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Exercises/ExerciseDetail.jsx",[],"/home/kpasek/Programowanie/WEB/bundle/trening/src/components/Trainings/Trainings.jsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":1,"nodeType":"41","messageId":"42","fix":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"46","text":"47"},"no-global-assign","no-unsafe-negation",[-1,0],""]